# Create an F5 BIG-IP iRule that implements selective HTTP compression based on URI patterns and client IP addresses. The rule should enable compression for approved file extensions and directories while disabling it for non-compressible content types, specific directories, or blocklisted client IPs, with appropriate logging for troubleshooting.

when HTTP_REQUEST priority 500 {
    # Initialize the compression flag - default is to allow compression
    # 0 means compression is allowed, 1 means compression is disabled
    set nocompress 0

    # Log the default compression state for debugging
    log local0. "comp enabled default "

    # First condition block: ALLOW compression explicitly for specific cases
    # Check if URI has an approved file extension OR is in an approved directory
    # AND the client IP is not in the no-compression list
    if { ( [class match -- [set uri_lower [string tolower [HTTP::uri]]] ends_with /Common/ok_extension] ||
       ||  [class match -- ${uri_lower} contains /Common/compress_dir])
       && ![class match -- [IP::remote_addr] equals /Common/no_compress_ip] } {
        # Explicitly set compression flag to enabled
        set nocompress 0

        # Log the decision and the client IP for troubleshooting
        log local0. "set to 0 for ok_extension or compress_dir or ip [IP::remote_addr]"

        # Exit the event handler since we've made our decision
        return
    }

    # Second condition block: DISABLE compression for specific cases
    # Check if URI has a non-compressible extension OR is in a no-compression directory
    # OR the client IP is in the no-compression list
    if { [class match -- ${uri_lower} ends_with /Common/no_extension]
      || [class match -- ${uri_lower} contains /Common/no_compress_dir]
      || [class match -- [IP::remote_addr] equals /Common/no_compress_ip] } {
        # Set compression flag to disabled
        set nocompress 1

        # Log the decision and the client IP for troubleshooting
        log local0. "set to 1 for no_extension or no_compress_dir or your ip [IP::remote_addr]"

        # Exit the event handler since we've made our decision
        return
    }

    # If execution reaches here, neither condition was met
    # The default nocompress=0 value will be used (compression enabled)
}