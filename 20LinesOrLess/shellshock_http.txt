# Create an F5 BIG-IP iRule that protects against Shellshock vulnerability exploits. The rule should log detailed information about the attack attempt including the client IP address, affected header or URI, and then reject the connection to block the attack.

when HTTP_REQUEST priority 500 {
    # Define the pattern that identifies a Shellshock attack attempt
    # The pattern looks for the characteristic "() {" sequence that triggers the vulnerability
    set pattern "*() \{*";

    # First check: Examine the URI for the Shellshock pattern
    if { [string match $pattern [HTTP::uri]] } {
        # Log the attack attempt with client IP and the malicious URI
        log local0. "Detected CVE-2014-6271 attack from '[IP::client_addr]' in URI '[HTTP::uri]'"
        # Reject the connection to block the attack
        reject
        # Exit the event handler - no need to check further
        return
    }

    # Second check: Examine all HTTP headers for the Shellshock pattern
    # Attackers often hide the exploit in various HTTP headers
    foreach header_name [HTTP::header names] {
        # For each header, check all its values (some headers can have multiple values)
        foreach header_value [HTTP::header values $header_name] {
            # Check if the header value contains the Shellshock pattern
            if { [string match $pattern $header_value] } {
                # Log the attack with detailed information including header name and value
                log local0. "Detected CVE-2014-6271 attack from '[IP::client_addr]' in HTTP Header $header_name = '$header_value'; URI = '[HTTP::uri]'"
                # Reject the connection to block the attack
                reject
                # Disable all further event processing for this connection
                event disable all
                # Exit the loop - we've found an attack and taken action
                break
            }
        }
    }
}