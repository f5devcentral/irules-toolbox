when CLIENT_ACCEPTED priority 500 {
   set COOKIE_TO_VALIDATE "my_cookie"
   set ALLOWED_CHARS_COOKIE_VALUE {%[-a-zA-Z0-9_]}
   set DEBUG 1
}

when HTTP_REQUEST priority 500 {
   if { ![string length [HTTP::cookie value $COOKIE_TO_VALIDATE]] } {
      return
   }
   if { [HTTP::cookie value $COOKIE_TO_VALIDATE] eq [scan [HTTP::cookie value $COOKIE_TO_VALIDATE] $ALLOWED_CHARS_COOKIE_VALUE] } {
      if {$DEBUG} {log local0. "Received a request from [IP::client_addr] with legal cookie value: [HTTP::cookie value $COOKIE_TO_VALIDATE]"}
   } else {
      if {$DEBUG} {
         set len [string length [scan [HTTP::cookie value $COOKIE_TO_VALIDATE] $ALLOWED_CHARS_COOKIE_VALUE]]
         log local0. "Received a request from [IP::client_addr] with illegal cookie value: [HTTP::cookie value $COOKIE_TO_VALIDATE], \
            char: [string range [HTTP::cookie value $COOKIE_TO_VALIDATE] $len $len]"
      }
   }
}